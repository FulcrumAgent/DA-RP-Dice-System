/**
 * Server Setup Command - Creates the standard Dune: Awakened Adventures server structure
 */

import { 
  SlashCommandBuilder, 
  CommandInteraction, 
  PermissionFlagsBits,
  ChannelType,
  ForumChannel,
  TextChannel,
  CategoryChannel,
  Guild,
  GuildChannel
} from 'discord.js';
import { logger } from '../utils/logger';

// Forum post templates
const FORUM_POST_TEMPLATES = {
  'Storyguide/GM Guide': {
    title: 'Storyguide/GM Guide',
    content: `# Welcome to the Storyguide/GM Guide!

This forum post contains essential information for Game Masters running Dune: Awakened Adventures campaigns.

## Getting Started
- Review the core mechanics and house rules
- Familiarize yourself with the momentum and threat systems
- Understand character creation guidelines

## Quick Reference
- Use \`/dune-help\` for system mechanics
- Use \`/scene-host\` commands for scene management
- Check character sheets in #character-sheets

## Resources
More detailed guides and resources will be added here as the community grows.

*This is a living document - feel free to ask questions and contribute!*`
  },
  'Command Reference': {
    title: 'Command Reference',
    content: `# Bot Command Reference

Complete list of available bot commands for Dune: Awakened Adventures.

## Dice Rolling Commands
- \`/roll\` - Basic dice rolling with modifiers
- \`/dune-roll\` - Dune system-specific rolls with momentum
- \`/roll-help\` - Help with dice rolling syntax

## Character Management
- \`/character-sheet\` - Create and manage character sheets
- \`/character-sheet view\` - View existing character sheets

## Scene Management
- \`/scene-host\` - Tools for managing scenes and encounters

## System Commands
- \`/momentum\` - Manage momentum pool
- \`/dune-help\` - System mechanics reference
- \`/dune-reference\` - Quick rules lookup

## Server Setup
- \`/setup-server\` - Create standard server structure (Admin only)

*Use any command with no parameters to see detailed help!*`
  },
  'Key Concepts & Core Mechanics': {
    title: 'Key Concepts & Core Mechanics',
    content: `# Key Concepts & Core Mechanics

Essential mechanics for Dune: Awakened Adventures gameplay.

## Core Resolution
- Roll 2d20 + Attribute + Skill
- Target Number (TN) set by difficulty
- Success = meeting or exceeding TN
- Momentum generated from excess success

## Momentum System
- Shared resource for the group
- Spend for advantages and special effects
- Generated by successful rolls and roleplay
- Maximum pool varies by group size

## Threat System
- GM resource for complications
- Generated by player failures and choices
- Used for environmental hazards and opposition

## Character Attributes
- **Muscle**: Physical strength and endurance
- **Move**: Agility and reflexes  
- **Intellect**: Reasoning and knowledge
- **Awareness**: Perception and intuition
- **Communication**: Social interaction
- **Discipline**: Mental fortitude and focus

## Skills & Focuses
- Skills provide broad competency
- Focuses offer specialized expertise
- Both add to dice rolls when applicable

*Refer to the official rulebook for complete mechanics!*`
  },
  'Quick Start Guide': {
    title: 'Quick Start Guide',
    content: `# Quick Start Guide

Get up and running with Dune: Awakened Adventures!

## For New Players

### 1. Create Your Character
- Use \`/character-sheet\` to start character creation
- Follow the guided prompts for attributes, skills, and background
- Choose drives that motivate your character

### 2. Learn the Basics
- Read the Key Concepts & Core Mechanics post
- Practice with \`/roll\` and \`/dune-roll\` commands
- Ask questions in #dice-help

### 3. Join the Adventure
- Coordinate with your Storyguide for session scheduling
- Use #scenes for in-character roleplay
- Check #character-sheets for character updates

## For Storyguides

### 1. Server Setup
- Run \`/setup-server\` to create standard channels (if not done)
- Review the Storyguide/GM Guide post
- Set up your campaign in #scenes

### 2. Session Management  
- Use \`/scene-host\` commands for encounters
- Manage momentum and threat pools
- Guide players through character creation

### 3. Resources
- Bot commands handle most mechanics automatically
- Use \`/dune-reference\` for quick rule lookups
- Encourage player engagement with momentum system

## Getting Help
- #dice-help for bot and system questions
- Storyguide/GM Guide for advanced topics
- Command Reference for complete bot documentation

*Welcome to the desert planet - may your journey be legendary!*`
  },
  'Introduction & Project Overview': {
    title: 'Introduction & Project Overview',
    content: `# Welcome to Dune: Awakened Adventures!

This Discord server supports tabletop roleplaying in the Dune universe using a custom system designed for narrative gameplay.

## What is Dune: Awakened Adventures?
A tabletop RPG system set in Frank Herbert's Dune universe, focusing on:
- Political intrigue and house conflicts
- Survival in harsh desert environments  
- The mystical powers of the Bene Gesserit and other factions
- Epic storytelling across the Known Universe

## Server Purpose
This Discord server provides:
- **Automated dice rolling** with momentum mechanics
- **Character sheet management** with persistent storage
- **Scene management tools** for Storyguides
- **Reference materials** and quick rule lookups
- **Community space** for players and GMs

## Getting Started
1. Check out the **Quick Start Guide** for new player orientation
2. Review **Key Concepts & Core Mechanics** for system basics
3. Use the **Command Reference** to learn bot capabilities
4. Storyguides should read the **GM Guide** for advanced features

## Community Guidelines
- Respect all players and their creative contributions
- Keep discussions relevant to Dune and tabletop gaming
- Use appropriate channels for different types of content
- Help new players learn the system and bot commands

## Technical Details
- Bot built with Discord.js and TypeScript
- Character data persisted in PostgreSQL database
- Open source project - contributions welcome!
- Hosted on Railway for reliable uptime

*The spice must flow - and so must great stories!*

---
*Server created with the Dune: Awakened Adventures Discord Bot*`
  }
};

// Text channels to create
const TEXT_CHANNELS = [
  { name: 'lookups', topic: 'Quick reference lookups and rule clarifications' },
  { name: 'dice-help', topic: 'Help with dice rolling commands and bot usage' },
  { name: 'dice-rolling', topic: 'Practice dice rolls and test bot commands' },
  { name: 'character-sheets', topic: 'Character creation, updates, and sheet management' },
  { name: 'scenes', topic: 'In-character roleplay and scene descriptions' }
];

export const serverSetupCommand = new SlashCommandBuilder()
  .setName('setup-server')
  .setDescription('Create the standard Dune: Awakened Adventures server structure')
  .setDefaultMemberPermissions(PermissionFlagsBits.Administrator);

export async function handleServerSetupCommand(interaction: CommandInteraction): Promise<void> {
  // Verify user has administrator permissions
  if (!interaction.memberPermissions?.has(PermissionFlagsBits.Administrator)) {
    await interaction.reply({
      content: '❌ You need Administrator permissions to use this command.',
      ephemeral: true
    });
    return;
  }

  const guild = interaction.guild;
  if (!guild) {
    await interaction.reply({
      content: '❌ This command can only be used in a server.',
      ephemeral: true
    });
    return;
  }

  await interaction.deferReply();

  try {
    logger.info(`Setting up server structure for guild: ${guild.name} (${guild.id})`);
    
    const results = {
      forumCreated: false,
      postsCreated: 0,
      channelsCreated: 0,
      errors: [] as string[]
    };

    // Check bot permissions
    const botMember = guild.members.me;
    if (!botMember?.permissions.has([
      PermissionFlagsBits.ManageChannels,
      PermissionFlagsBits.CreatePublicThreads,
      PermissionFlagsBits.SendMessages
    ])) {
      await interaction.editReply({
        content: '❌ I need "Manage Channels", "Create Public Threads", and "Send Messages" permissions to set up the server.'
      });
      return;
    }

    // 1. Create or find documentation forum
    let documentationForum = guild.channels.cache.find(
      channel => channel.name === 'documentation' && channel.type === ChannelType.GuildForum
    ) as ForumChannel;

    if (!documentationForum) {
      try {
        documentationForum = await guild.channels.create({
          name: 'documentation',
          type: ChannelType.GuildForum,
          topic: 'Server documentation and guides for Dune: Awakened Adventures',
          reason: 'Server setup - creating documentation forum'
        });
        results.forumCreated = true;
        logger.info(`Created documentation forum in ${guild.name}`);
      } catch (error) {
        const errorMsg = `Failed to create documentation forum: ${error}`;
        results.errors.push(errorMsg);
        logger.error(errorMsg);
      }
    }

    // 2. Create forum posts if forum exists
    if (documentationForum) {
      for (const [postKey, template] of Object.entries(FORUM_POST_TEMPLATES)) {
        try {
          // Check if post already exists
          const existingPost = documentationForum.threads.cache.find(
            thread => thread.name === template.title
          );

          if (!existingPost) {
            const forumPost = await documentationForum.threads.create({
              name: template.title,
              message: {
                content: template.content
              },
              reason: 'Server setup - creating documentation post'
            });

            // Pin the post (forum threads use different pinning method)
            await forumPost.setArchived(false);
            await forumPost.pin();
            
            results.postsCreated++;
            logger.info(`Created forum post: ${template.title} in ${guild.name}`);
          }
        } catch (error) {
          const errorMsg = `Failed to create forum post "${template.title}": ${error}`;
          results.errors.push(errorMsg);
          logger.error(errorMsg);
        }
      }
    }

    // 3. Create text channels
    for (const channelConfig of TEXT_CHANNELS) {
      try {
        // Check if channel already exists
        const existingChannel = guild.channels.cache.find(
          channel => channel.name === channelConfig.name && channel.type === ChannelType.GuildText
        );

        if (!existingChannel) {
          await guild.channels.create({
            name: channelConfig.name,
            type: ChannelType.GuildText,
            topic: channelConfig.topic,
            reason: 'Server setup - creating standard text channel'
          });
          results.channelsCreated++;
          logger.info(`Created text channel: #${channelConfig.name} in ${guild.name}`);
        }
      } catch (error) {
        const errorMsg = `Failed to create channel "#${channelConfig.name}": ${error}`;
        results.errors.push(errorMsg);
        logger.error(errorMsg);
      }
    }

    // 4. Build response message
    let responseMessage = '✅ **Server setup completed!**\n\n';
    
    if (results.forumCreated) {
      responseMessage += '📁 Created **documentation** forum\n';
    }
    
    if (results.postsCreated > 0) {
      responseMessage += `📝 Created ${results.postsCreated} documentation posts\n`;
    }
    
    if (results.channelsCreated > 0) {
      responseMessage += `💬 Created ${results.channelsCreated} text channels\n`;
    }

    if (results.forumCreated === false && results.postsCreated === 0 && results.channelsCreated === 0) {
      responseMessage += '📋 All channels and posts already exist - nothing to create.\n';
    }

    if (results.errors.length > 0) {
      responseMessage += '\n⚠️ **Errors encountered:**\n';
      results.errors.forEach(error => {
        responseMessage += `• ${error}\n`;
      });
    }

    responseMessage += '\n🎲 Your Dune: Awakened Adventures server is ready!';

    await interaction.editReply({ content: responseMessage });

  } catch (error) {
    logger.error('Server setup command failed:', error);
    await interaction.editReply({
      content: '❌ An unexpected error occurred during server setup. Please check my permissions and try again.'
    });
  }
}
